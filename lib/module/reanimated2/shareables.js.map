{"version":3,"names":["NativeReanimatedModule","shouldBeUseWeb","registerWorkletStackDetails","jsVersion","USE_STUB_IMPLEMENTATION","_shareableCache","WeakMap","_shareableFlag","Symbol","MAGIC_KEY","isHostObject","value","registerShareableMapping","shareable","shareableRef","set","isPlainJSObject","object","Object","getPrototypeOf","prototype","INACCESSIBLE_OBJECT","__init","Proxy","get","_","prop","Error","String","VALID_ARRAY_VIEWS_NAMES","DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD","processedObjectAtThresholdDepth","makeShareableCloneRecursive","shouldPersistRemote","arguments","length","undefined","depth","type","isTypeObject","isTypeFunction","cached","toAdapt","Array","isArray","map","element","__workletHash","__DEV__","babelVersion","__initData","version","getWorkletCode","__stackDetails","key","entries","RegExp","pattern","source","flags","handle","ArrayBuffer","isView","buffer","constructor","name","includes","global","inaccessibleObject","freeze","adopted","makeShareableClone","WORKLET_CODE_THRESHOLD","_value$__initData","code","substring","isRemoteFunction","__remoteFunction","makeShareableCloneOnUIRecursive","cloneRecursive","_makeShareableClone","makeShareable"],"sources":["shareables.ts"],"sourcesContent":["'use strict';\nimport NativeReanimatedModule from './NativeReanimated';\nimport type {\n  ShareableRef,\n  FlatShareableRef,\n  __WorkletFunction,\n} from './commonTypes';\nimport { shouldBeUseWeb } from './PlatformChecker';\nimport { registerWorkletStackDetails } from './errors';\nimport { jsVersion } from './platform-specific/jsVersion';\n\n// for web/chrome debugger/jest environments this file provides a stub implementation\n// where no shareable references are used. Instead, the objects themselves are used\n// instead of shareable references, because of the fact that we don't have to deal with\n// runnning the code on separate VMs.\nconst USE_STUB_IMPLEMENTATION = shouldBeUseWeb();\n\nconst _shareableCache = new WeakMap<\n  Record<string, unknown>,\n  ShareableRef<unknown> | symbol\n>();\n// the below symbol is used to represent a mapping from the value to itself\n// this is used to allow for a converted shareable to be passed to makeShareableClone\nconst _shareableFlag = Symbol('shareable flag');\n\nconst MAGIC_KEY = 'REANIMATED_MAGIC_KEY';\n\nfunction isHostObject(value: NonNullable<object>) {\n  'worklet';\n  // We could use JSI to determine whether an object is a host object, however\n  // the below workaround works well and is way faster than an additional JSI call.\n  // We use the fact that host objects have broken implementation of `hasOwnProperty`\n  // and hence return true for all `in` checks regardless of the key we ask for.\n  return MAGIC_KEY in value;\n}\n\nexport function registerShareableMapping(\n  shareable: any,\n  shareableRef?: ShareableRef<unknown>\n): void {\n  if (USE_STUB_IMPLEMENTATION) {\n    return;\n  }\n  _shareableCache.set(shareable, shareableRef || _shareableFlag);\n}\n\nfunction isPlainJSObject(object: object) {\n  return Object.getPrototypeOf(object) === Object.prototype;\n}\n\n// The below object is used as a replacement for objects that cannot be transferred\n// as shareable values. In makeShareableCloneRecursive we detect if an object is of\n// a plain Object.prototype and only allow such objects to be transferred. This lets\n// us avoid all sorts of react internals from leaking into the UI runtime. To make it\n// possible to catch errors when someone actually tries to access such object on the UI\n// runtime, we use the below Proxy object which is instantiated on the UI runtime and\n// throws whenever someone tries to access its fields.\nconst INACCESSIBLE_OBJECT = {\n  __init: () => {\n    'worklet';\n    return new Proxy(\n      {},\n      {\n        get: (_: any, prop: string | symbol) => {\n          if (\n            prop === '_isReanimatedSharedValue' ||\n            prop === '__remoteFunction'\n          ) {\n            // not very happy about this check here, but we need to allow for\n            // \"inaccessible\" objects to be tested with isSharedValue check\n            // as it is being used in the mappers when extracting inputs recursively\n            // as well as with isRemoteFunction when cloning objects recursively.\n            // Apparently we can't check if a key exists there as HostObjects always\n            // return true for such tests, so the only possibility for us is to\n            // actually access that key and see if it is set to true. We therefore\n            // need to allow for this key to be accessed here.\n            return false;\n          }\n          throw new Error(\n            `[Reanimated] Trying to access property \\`${String(\n              prop\n            )}\\` of an object which cannot be sent to the UI runtime.`\n          );\n        },\n        set: () => {\n          throw new Error(\n            '[Reanimated] Trying to write to an object which cannot be sent to the UI runtime.'\n          );\n        },\n      }\n    );\n  },\n};\n\nconst VALID_ARRAY_VIEWS_NAMES = [\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array',\n  'DataView',\n];\n\nconst DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD = 30;\n// Below variable stores object that we process in makeShareableCloneRecursive at the specified depth.\n// We use it to check if later on the function reenters with the same object\nlet processedObjectAtThresholdDepth: any;\n\nexport function makeShareableCloneRecursive<T>(\n  value: any,\n  shouldPersistRemote = false,\n  depth = 0\n): ShareableRef<T> {\n  if (USE_STUB_IMPLEMENTATION) {\n    return value;\n  }\n  if (depth >= DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD) {\n    // if we reach certain recursion depth we suspect that we are dealing with a cyclic object.\n    // this type of objects are not supported and cannot be trasferred as shareable, so we\n    // implement a simple detection mechanism that remembers the value at a given depth and\n    // tests whether we try reenter this method later on with the same value. If that happens\n    // we throw an appropriate error.\n    if (depth === DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD) {\n      processedObjectAtThresholdDepth = value;\n    } else if (value === processedObjectAtThresholdDepth) {\n      throw new Error(\n        '[Reanimated] Trying to convert a cyclic object to a shareable. This is not supported.'\n      );\n    }\n  } else {\n    processedObjectAtThresholdDepth = undefined;\n  }\n  // This one actually may be worth to be moved to c++, we also need similar logic to run on the UI thread\n  const type = typeof value;\n  const isTypeObject = type === 'object';\n  const isTypeFunction = type === 'function';\n  if ((isTypeObject || isTypeFunction) && value !== null) {\n    const cached = _shareableCache.get(value);\n    if (cached === _shareableFlag) {\n      return value;\n    } else if (cached !== undefined) {\n      return cached as ShareableRef<T>;\n    } else {\n      let toAdapt: any;\n      if (Array.isArray(value)) {\n        toAdapt = value.map((element) =>\n          makeShareableCloneRecursive(element, shouldPersistRemote, depth + 1)\n        );\n      } else if (isTypeFunction && value.__workletHash === undefined) {\n        // this is a remote function\n        toAdapt = value;\n      } else if (isHostObject(value)) {\n        // for host objects we pass the reference to the object as shareable and\n        // then recreate new host object wrapping the same instance on the UI thread.\n        // there is no point of iterating over keys as we do for regular objects.\n        toAdapt = value;\n      } else if (isPlainJSObject(value) || isTypeFunction) {\n        toAdapt = {};\n        if (value.__workletHash !== undefined) {\n          // we are converting a worklet\n          if (__DEV__) {\n            const babelVersion = value.__initData.version;\n            if (babelVersion === undefined) {\n              throw new Error(`[Reanimated] Unknown version of Reanimated Babel plugin.\nSee \\`https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#unknown-version-of-reanimated-babel-plugin\\` for more details. \nOffending code was: \\`${getWorkletCode(value)}\\``);\n            } else if (babelVersion !== jsVersion) {\n              throw new Error(`[Reanimated] Mismatch between JavaScript code version and Reanimated Babel plugin version (${jsVersion} vs. ${babelVersion}).        \nSee \\`https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#mismatch-between-javascript-code-version-and-reanimated-babel-plugin-version\\` for more details.\nOffending code was: \\`${getWorkletCode(value)}\\``);\n            }\n            registerWorkletStackDetails(\n              value.__workletHash,\n              value.__stackDetails\n            );\n            delete value.__stackDetails;\n          } else if (value.__stackDetails) {\n            // Detected debug version of the worklet in release bundle. This\n            // might lead to unexpected issues or errors. Probably one of user\n            // dependencies provided transpiled code with debug version of the\n            // Reanimated plugin.\n            throw new Error(\n              `[Reanimated] Using dev bundle in a release app build is not supported.\nSee \\`https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#using-dev-bundle-in-a-release-app-build-is-not-supported\\` for more details.`\n            );\n          }\n          // to save on transferring static __initData field of worklet structure\n          // we request shareable value to persist its UI counterpart. This means\n          // that the __initData field that contains long strings represeting the\n          // worklet code, source map, and location, will always be\n          // serialized/deserialized once.\n          toAdapt.__initData = makeShareableCloneRecursive(\n            value.__initData,\n            true,\n            depth + 1\n          );\n        }\n\n        for (const [key, element] of Object.entries(value)) {\n          toAdapt[key] = makeShareableCloneRecursive(\n            element,\n            shouldPersistRemote,\n            depth + 1\n          );\n        }\n      } else if (value instanceof RegExp) {\n        const pattern = value.source;\n        const flags = value.flags;\n        const handle = makeShareableCloneRecursive({\n          __init: () => {\n            'worklet';\n            return new RegExp(pattern, flags);\n          },\n        });\n        registerShareableMapping(value, handle);\n        return handle as ShareableRef<T>;\n      } else if (value instanceof ArrayBuffer) {\n        toAdapt = value;\n      } else if (ArrayBuffer.isView(value)) {\n        // typed array (e.g. Int32Array, Uint8ClampedArray) or DataView\n        const buffer = value.buffer;\n        const type = value.constructor.name;\n        const handle = makeShareableCloneRecursive({\n          __init: () => {\n            'worklet';\n            if (!VALID_ARRAY_VIEWS_NAMES.includes(type)) {\n              throw new Error(\n                `[Reanimated] Invalid array view name \\`${type}\\`.`\n              );\n            }\n            const constructor = global[type as keyof typeof global];\n            if (constructor === undefined) {\n              throw new Error(\n                `[Reanimated] Constructor for \\`${type}\\` not found.`\n              );\n            }\n            return new constructor(buffer);\n          },\n        });\n        registerShareableMapping(value, handle);\n        return handle as ShareableRef<T>;\n      } else {\n        // This is reached for object types that are not of plain Object.prototype.\n        // We don't support such objects from being transferred as shareables to\n        // the UI runtime and hence we replace them with \"inaccessible object\"\n        // which is implemented as a Proxy object that throws on any attempt\n        // of accessing its fields. We argue that such objects can sometimes leak\n        // as attributes of objects being captured by worklets but should never\n        // be used on the UI runtime regardless. If they are being accessed, the user\n        // will get an appropriate error message.\n        const inaccessibleObject =\n          makeShareableCloneRecursive<T>(INACCESSIBLE_OBJECT);\n        _shareableCache.set(value, inaccessibleObject);\n        return inaccessibleObject;\n      }\n      if (__DEV__) {\n        // we freeze objects that are transformed to shareable. This should help\n        // detect issues when someone modifies data after it's been converted to\n        // shareable. Meaning that they may be doing a faulty assumption in their\n        // code expecting that the updates are going to automatically populate to\n        // the object sent to the UI thread. If the user really wants some objects\n        // to be mutable they should use shared values instead.\n        Object.freeze(value);\n      }\n      const adopted = NativeReanimatedModule.makeShareableClone(\n        toAdapt,\n        shouldPersistRemote\n      );\n      _shareableCache.set(value, adopted);\n      _shareableCache.set(adopted, _shareableFlag);\n      return adopted;\n    }\n  }\n  return NativeReanimatedModule.makeShareableClone(value, shouldPersistRemote);\n}\n\nconst WORKLET_CODE_THRESHOLD = 255;\n\nfunction getWorkletCode(value: __WorkletFunction) {\n  // @ts-ignore this is fine\n  const code = value?.__initData?.code;\n  if (!code) {\n    return 'unknown';\n  }\n  if (code.length > WORKLET_CODE_THRESHOLD) {\n    return `${code.substring(0, WORKLET_CODE_THRESHOLD)}...`;\n  }\n  return code;\n}\n\ntype RemoteFunction<T> = {\n  __remoteFunction: FlatShareableRef<T>;\n};\n\nfunction isRemoteFunction<T>(value: {\n  __remoteFunction?: unknown;\n}): value is RemoteFunction<T> {\n  'worklet';\n  return !!value.__remoteFunction;\n}\n\nexport function makeShareableCloneOnUIRecursive<T>(\n  value: T\n): FlatShareableRef<T> {\n  'worklet';\n  if (USE_STUB_IMPLEMENTATION) {\n    // @ts-ignore web is an interesting place where we don't run a secondary VM on the UI thread\n    // see more details in the comment where USE_STUB_IMPLEMENTATION is defined.\n    return value;\n  }\n  function cloneRecursive<T>(value: T): FlatShareableRef<T> {\n    if (\n      (typeof value === 'object' && value !== null) ||\n      typeof value === 'function'\n    ) {\n      if (isHostObject(value)) {\n        // We call `_makeShareableClone` to wrap the provided HostObject\n        // inside ShareableJSRef.\n        return _makeShareableClone(value) as FlatShareableRef<T>;\n      }\n      if (isRemoteFunction<T>(value)) {\n        // RemoteFunctions are created by us therefore they are\n        // a Shareable out of the box and there is no need to\n        // call `_makeShareableClone`.\n        return value.__remoteFunction;\n      }\n      if (Array.isArray(value)) {\n        return _makeShareableClone(\n          value.map(cloneRecursive)\n        ) as FlatShareableRef<T>;\n      }\n      const toAdapt: Record<string, FlatShareableRef<T>> = {};\n      for (const [key, element] of Object.entries(value)) {\n        toAdapt[key] = cloneRecursive<T>(element);\n      }\n      return _makeShareableClone(toAdapt) as FlatShareableRef<T>;\n    }\n    return _makeShareableClone(value);\n  }\n  return cloneRecursive(value);\n}\n\nexport function makeShareable<T>(value: T): T {\n  if (USE_STUB_IMPLEMENTATION) {\n    return value;\n  }\n  const handle = makeShareableCloneRecursive({\n    __init: () => {\n      'worklet';\n      return value;\n    },\n  });\n  registerShareableMapping(value, handle);\n  return value;\n}\n"],"mappings":"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"}