"use strict";(self.webpackChunkreact_native_reanimated=self.webpackChunkreact_native_reanimated||[]).push([[8113],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return u}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=l(t),u=i,f=m["".concat(s,".").concat(u)]||m[u]||d[u]||a;return t?r.createElement(f,o(o({ref:n},c),{},{components:t})):r.createElement(f,o({ref:n},c))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=m;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p.mdxType="string"==typeof e?e:i,o[1]=p;for(var l=2;l<a;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5400:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return l},default:function(){return d}});var r=t(7462),i=t(3366),a=(t(7294),t(3905)),o={id:"spring",title:"Spring",sidebar_label:"Spring"},p=void 0,s={unversionedId:"animations/spring",id:"version-1.x.x/animations/spring",isDocsHomePage:!1,title:"Spring",description:"`js",source:"@site/versioned_docs/version-1.x.x/animations/spring.md",sourceDirName:"animations",slug:"/animations/spring",permalink:"/react-native-reanimated/docs/1.x.x/animations/spring",version:"1.x.x",frontMatter:{id:"spring",title:"Spring",sidebar_label:"Spring"},sidebar:"version-1.x.x/docs",previous:{title:"Decay",permalink:"/react-native-reanimated/docs/1.x.x/animations/decay"},next:{title:"SpringUtils",permalink:"/react-native-reanimated/docs/1.x.x/animations/spring_utils"}},l=[],c={toc:l};function d(e){var n=e.components,t=(0,i.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"spring(\n  clock,\n  { finished, position, velocity, time },\n  {\n    damping,\n    mass,\n    stiffness,\n    overshootClamping,\n    restSpeedThreshold,\n    restDisplacementThreshold,\n    toValue,\n  }\n);\n")),(0,a.kt)("p",null,"When evaluated, updates ",(0,a.kt)("inlineCode",{parentName:"p"},"position")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"velocity")," nodes by running a single step of spring based animation. Check the original ",(0,a.kt)("inlineCode",{parentName:"p"},"Animated")," API docs to learn about the config parameters like ",(0,a.kt)("inlineCode",{parentName:"p"},"damping"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"mass"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"stiffness"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"overshootClamping"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"restSpeedThreshold")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"restDisplacementThreshold"),". The ",(0,a.kt)("inlineCode",{parentName:"p"},"finished")," state updates to ",(0,a.kt)("inlineCode",{parentName:"p"},"1")," when the ",(0,a.kt)("inlineCode",{parentName:"p"},"position")," reaches the destination set by ",(0,a.kt)("inlineCode",{parentName:"p"},"toValue"),". The ",(0,a.kt)("inlineCode",{parentName:"p"},"time")," state variable also updates when the node evaluates and it represents the clock value at the time when the node got evaluated for the last time. It is expected that ",(0,a.kt)("inlineCode",{parentName:"p"},"time")," variable is reset before spring animation can be restarted."))}d.isMDXComponent=!0}}]);